version: 2.1
orbs:
  node: circleci/node@5

jobs:
  test-node:
    # Install node dependencies and run tests
    executor: node/default
    working_directory: ~/project/app/frontend
    environment:
      JEST_JUNIT_OUTPUT_DIR: ./test-results/
    steps:
      - checkout:
          path: ~/project
      - node/install-packages:
          pkg-manager: npm
      - run:
          command: npm install jest-junit
      - run:
          name: Run tests with Jest
          command: ./node_modules/.bin/jest --ci --runInBand --reporters=default --reporters=jest-junit
      - store_test_results:
          path: ./test-results/
  deploy-frontend:
    docker:
      - image: cimg/base:stable
    working_directory: ~/project
    steps:
      - checkout
      - run:
          name: Setup Git User
          command: |
            git config --global user.email "ci-build@circleci.com"
            git config --global user.name "CircleCI Build"
      - run:
          name: Clone Frontend Fork Repository
          command: |
            git clone ${FRONTEND_FORK_REPO} ~/frontend-fork
      - run:
          name: Sync Frontend to Fork (excluding __tests__ directories)
          command: |
            # Remove all existing files in fork (except .git)
            find ~/frontend-fork -mindepth 1 -not -path "~/frontend-fork/.git*" -delete
            
            # Copy all frontend files except __tests__ directories
            cd ~/project/app/frontend
            find . -type d -not -path "*/node_modules/*" -not -path "*/__tests__*" -not -path "*/\.*" | xargs -I {} mkdir -p ~/frontend-fork/{}
            find . -type f -not -path "*/node_modules/*" -not -path "*/__tests__*" -not -path "*/\.*" -exec cp {} ~/frontend-fork/{} \;
      - run:
          name: Commit and Push Changes to Fork
          command: |
            cd ~/frontend-fork
            
            # Add all files to git
            git add -A
            
            # Only commit and push if there are changes
            if git status | grep -q "Changes to be committed"; then
              git commit -m "Sync frontend from main repository [skip ci]"
              git push origin HEAD
              echo "Changes pushed to frontend fork repository"
            else
              echo "No changes to commit"
            fi

workflows:
  frontend-sync:
    jobs:
      - test-node
      - deploy-frontend:
          requires:
            - test-node
          filters:
            branches:
              only: main 